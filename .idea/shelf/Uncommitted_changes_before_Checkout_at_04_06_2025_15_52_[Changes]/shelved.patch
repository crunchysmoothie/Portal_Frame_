Index: user_input.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\n\r\n\r\n# Function to generate nodes based on the portal frame structure with static values\r\ndef generate_nodes(building_type, eaves_height, apex_height, rafter_span):\r\n    nodes = []\r\n    num_vertical = 3\r\n\r\n    # Generate nodes for Duo Pitched type\r\n    if building_type == \"Duo Pitched\":\r\n        # Generate 3 vertical nodes on the left side\r\n        for i in range(num_vertical):\r\n            node = {\r\n                \"name\": f\"N{i + 1}\",\r\n                \"x\": 0,\r\n                \"y\": round(i * (eaves_height / (num_vertical - 1)), 2),\r\n                \"z\": 0\r\n            }\r\n            nodes.append(node)\r\n\r\n        # Generate 4 diagonal nodes for the rafter section\r\n        num_diagonal = 4\r\n        for i in range(1, num_diagonal):\r\n            x = round(i * (rafter_span / num_diagonal), 2)\r\n            y = round(\r\n                eaves_height + ((apex_height - eaves_height) * (1 - abs(i - (num_diagonal / 2)) / (num_diagonal / 2))),\r\n                2)\r\n            node = {\r\n                \"name\": f\"N{num_vertical + i}\",\r\n                \"x\": x,\r\n                \"y\": y,\r\n                \"z\": 0\r\n            }\r\n            nodes.append(node)\r\n\r\n        # Generate 3 vertical nodes on the right side\r\n        for i in range(num_vertical):\r\n            node = {\r\n                \"name\": f\"N{num_vertical + num_diagonal + i}\",\r\n                \"x\": rafter_span,\r\n                \"y\": round(eaves_height - i * (eaves_height / (num_vertical - 1)), 2),\r\n                \"z\": 0\r\n            }\r\n            nodes.append(node)\r\n\r\n    # Generate nodes for Mono Pitched type\r\n    elif building_type == \"Mono Pitched\":\r\n        # Generate 3 vertical nodes on the left side\r\n        for i in range(num_vertical):\r\n            node = {\r\n                \"name\": f\"N{i + 1}\",\r\n                \"x\": 0,\r\n                \"y\": round(i * (eaves_height / (num_vertical - 1)), 2),\r\n                \"z\": 0\r\n            }\r\n            nodes.append(node)\r\n\r\n        # Generate 4 diagonal nodes for the rafter section for a single slope\r\n        num_diagonal = 4\r\n        for i in range(1, num_diagonal + 1):\r\n            x = round(i * (rafter_span / num_diagonal), 2)\r\n            y = round(eaves_height + (apex_height - eaves_height) * (i / num_diagonal), 2)\r\n            node = {\r\n                \"name\": f\"N{num_vertical + i}\",\r\n                \"x\": x,\r\n                \"y\": y,\r\n                \"z\": 0\r\n            }\r\n            nodes.append(node)\r\n\r\n        # Generate 3 vertical nodes on the right side\r\n        for i in range(1, num_vertical):\r\n            node = {\r\n                \"name\": f\"N{num_vertical + num_diagonal + i}\",\r\n                \"x\": rafter_span,\r\n                \"y\": round(apex_height - i * (apex_height / (num_vertical - 1)), 2),\r\n                \"z\": 0\r\n            }\r\n            nodes.append(node)\r\n\r\n    return nodes\r\n\r\ndef generate_supports(nodes):\r\n\r\n    supports = [\r\n        {\"node\": nodes[0][\"name\"], \"DX\": True, \"DY\": True, \"DZ\": True, \"RX\": False, \"RY\": False, \"RZ\": False},\r\n        {\"node\": nodes[-1][\"name\"], \"DX\": True, \"DY\": True, \"DZ\": True, \"RX\": False, \"RY\": False, \"RZ\": False}\r\n    ]\r\n\r\n    return supports\r\n\r\ndef generate_members(nodes):\r\n    members = []\r\n    num_nodes = len(nodes)\r\n\r\n    # Create members between consecutive nodes\r\n    for i in range(1, num_nodes):\r\n        member = {\r\n            \"name\": f\"M{i}\",\r\n            \"i_node\": nodes[i - 1][\"name\"],\r\n            \"j_node\": nodes[i][\"name\"],\r\n            \"material\": \"Steel_S355\",\r\n            \"type\": \"rafter\" if i in range(3, num_nodes - 2) else \"column\"\r\n        }\r\n        members.append(member)\r\n\r\n    return members\r\n\r\ndef generate_nodal_loads(nodes):\r\n    apex_node = nodes[len(nodes) // 2]\r\n    nodal_loads = [{\"node\": apex_node[\"name\"], \"direction\": \"FY\", \"magnitude\": -50, \"case\": \"L\"}]\r\n\r\n    return nodal_loads\r\n\r\ndef generate_member_loads(members):\r\n    member_loads = []\r\n\r\n    for member in members[0: len(members) // 2]:\r\n        if member[\"type\"] == \"column\":\r\n            member_loads.append({\"member\": member[\"name\"], \"direction\":\"Fy\",\"w1\":-0.0036,\"w2\":-0.0036,\"case\":\"L\"})\r\n\r\n    return member_loads\r\n\r\ndef generate_spring_supports(nodes):\r\n    rotational_springs = [{\"node\": nodes[0][\"name\"], \"direction\": \"RZ\", \"stiffness\": 5E6},\r\n                          {\"node\": nodes[-1][\"name\"], \"direction\": \"RZ\", \"stiffness\": 5E6}]\r\n    return rotational_springs\r\n\r\ndef input_wind_data(eaves_height, apex_height, rafter_span):\r\n    # Static values for the wind data\r\n    wind_data = [\r\n        {\r\n            \"fundamental_basic_wind_speed\": 36,\r\n            \"return_period\": 50,\r\n            \"topographic_factor\": 1.0,\r\n            \"altitude\": 1800,\r\n            \"terrain_category\": \"B\",\r\n            \"eaves_height\": eaves_height,\r\n            \"gable_width\": rafter_span,\r\n            \"apex_height\": apex_height,\r\n            \"roof_pitch\": 30\r\n        }\r\n    ]\r\n    return wind_data\r\n\r\ndef update_json_file(json_filename, building_type, eaves_height, apex_height, rafter_span):\r\n    # Generate new node and member data based on input dimensions\r\n    updated_frame = [{\"type\": building_type, \"eaves_height\": eaves_height, \"apex_height\": apex_height, \"rafter_span\": rafter_span, \"bay_spacing\": 6000}]\r\n    new_nodes = generate_nodes(building_type,eaves_height, apex_height, rafter_span)\r\n    new_members = generate_members(new_nodes)\r\n    new_supports = generate_supports(new_nodes)\r\n    new_loads = generate_nodal_loads(new_nodes)\r\n    new_member_loads = generate_member_loads(new_members)\r\n    rotational_springs = generate_spring_supports(new_nodes)\r\n\r\n    # Load existing JSON data\r\n    with open(json_filename, 'r') as file:\r\n        data = json.load(file)\r\n\r\n    # Update only the \"nodes\" and \"members\" sections\r\n    data[\"frame_data\"] = updated_frame\r\n    data[\"nodes\"] = new_nodes\r\n    data[\"members\"] = new_members\r\n    data[\"supports\"] = new_supports\r\n    data[\"nodal_loads\"] = new_loads\r\n    data[\"member_loads\"] = new_member_loads\r\n    data[\"rotational_springs\"] = rotational_springs\r\n\r\n    # Convert data to a compact JSON string\r\n    json_str = json.dumps(data, separators=(',', ':'))\r\n\r\n    # Insert line breaks between JSON objects\r\n    formatted_json_str = json_str.replace('},{', '},\\n  {')\r\n    formatted_json_str = formatted_json_str.replace('[{', '[\\n  {')\r\n    formatted_json_str = formatted_json_str.replace('}]', '}\\n]')\r\n    formatted_json_str = formatted_json_str.replace('],', '],\\n')\r\n    formatted_json_str = formatted_json_str.replace(']}', ']\\n}')\r\n\r\n    # Save the formatted JSON string to a file\r\n    with open(json_filename, 'w') as json_file:\r\n        json_file.write(formatted_json_str)\r\n\r\n    print(f\"Portal frame data saved to {json_filename}\")\r\n\r\n# Static inputs for eaves, apex, and rafter span (converted to mm)\r\nbuilding_type = \"Duo Pitched\" # \"Mono Pitched\" or \"Duo Pitched\"\r\neaves_height = 5 * 1000  # Convert to mm\r\napex_height = 7 * 1000  # Convert to mm\r\nrafter_span = 8 * 1000  # Convert to mm\r\nrafter_spacing = 5 * 1000 # Convert to mm\r\n\r\n# Filename of the existing JSON file\r\njson_filename = 'input_data.json'\r\n\r\n# Call the function to update the nodes and members in the JSON file\r\nupdate_json_file(json_filename,building_type, eaves_height, apex_height, rafter_span)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/user_input.py b/user_input.py
--- a/user_input.py	(revision c0e2a8fa0c47e617ee258ccc40d7863a3593d417)
+++ b/user_input.py	(date 1749045113489)
@@ -1,4 +1,5 @@
 import json
+import math
 
 
 # Function to generate nodes based on the portal frame structure with static values
@@ -138,7 +139,7 @@
             "eaves_height": eaves_height,
             "gable_width": rafter_span,
             "apex_height": apex_height,
-            "roof_pitch": 30
+            "roof_pitch": math.atan((apex_height-eaves_height)/(rafter_span/2)),
         }
     ]
     return wind_data
@@ -192,5 +193,7 @@
 # Filename of the existing JSON file
 json_filename = 'input_data.json'
 
+print(input_wind_data(eaves_height, apex_height, rafter_span)["roof_pitch"])
+
 # Call the function to update the nodes and members in the JSON file
 update_json_file(json_filename,building_type, eaves_height, apex_height, rafter_span)
\ No newline at end of file
Index: wind_loads.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\nimport math\r\nimport numpy as np\r\n\r\n\r\ndef import_data(file):\r\n    with open(file) as f:\r\n        data = json.load(f)\r\n        return data\r\n\r\ndef calculate_basic_wind_speed(fbs, return_period):\r\n    if return_period == 0: return 0\r\n    numerator = 1 - 0.2 * math.log(-math.log(1 - (1 / return_period)))\r\n    denominator = 1 - 0.2 * math.log(-math.log(0.98))\r\n    return (numerator / denominator) ** 0.5 * fbs\r\n\r\ndef calculate_terrain_roughness(apex_height, terrain_category):\r\n    categories = {'A': (1, 0, 250, 0.07), 'B': (2, 0, 300, 0.095),\r\n                  'C': (5, 3, 350, 0.12), 'D': (10, 5, 400, 0.15)}\r\n    zc, z0, zg, alpha = categories.get(terrain_category, (1, 0, 250, 0.07))\r\n    return 1.36 * ((max(apex_height, zc) - z0) / (zg - z0)) ** alpha\r\n\r\ndef calculate_air_density(altitude):\r\n    return 1.2 if altitude == 0 else 0.94 + (2000 - altitude) * 0.06 / 500\r\n\r\ndef calculate_peak_wind_pressure(topography_factor, basic_speed, roughness, altitude):\r\n    peak_speed = topography_factor * basic_speed * roughness\r\n    air_density = calculate_air_density(altitude)\r\n    return 0.5 * air_density * peak_speed ** 2 / 1000\r\n\r\ndef interpolate_cpe(h_d, h_d_data, cpe_data):\r\n    if h_d < h_d_data[0]:\r\n        h_d = h_d_data[0]\r\n    elif h_d > h_d_data[-1]:\r\n        h_d = h_d_data[-1]\r\n    return np.interp(h_d, h_d_data, cpe_data)\r\n\r\ndef interpolate_cpe_roof(roof_angle, angles, data):\r\n    return np.array([np.interp(roof_angle, angles, data[:, col]) for col in range(data.shape[1])])\r\n\r\ndef calculate_pressure(peak_wind_pressure, cpe, cpi):\r\n    return (peak_wind_pressure * cpe) - (peak_wind_pressure * cpi)\r\n\r\ndef wind_data():\r\n    angles = np.array([5, 15, 30, 45])\r\n    negative_pressure_data = np.array([\r\n        [-1.7, -1.2, -0.6, -0.6, -0.6],\r\n        [-0.9, -0.8, -0.3, -0.4, -1.0],\r\n        [-0.5, -0.5, -0.2, -0.4, -0.5],\r\n        [0, 0, 0, -0.2, -0.3]\r\n    ])\r\n\r\n    data = import_data(\"input_data.json\")\r\n    h_d_data = [0.25, 1.0]\r\n    cpe_d = [0.70, 0.80]\r\n    cpe_e = [-0.3, -0.50]\r\n\r\n    results = []\r\n\r\n    for wind in data['wind_data']:\r\n        bs = calculate_basic_wind_speed(wind['fundamental_basic_wind_speed'], wind['return_period'])\r\n        roughness = calculate_terrain_roughness(wind['apex_height'], wind['terrain_category'])\r\n        peak_pressure = calculate_peak_wind_pressure(wind['topographic_factor'], bs, roughness, wind['altitude'])\r\n\r\n        h_d_zone_d = wind['eaves_height'] / wind['gable_width']\r\n        h_d_zone_e = wind['apex_height'] / wind['gable_width']\r\n\r\n        cpe_value_d = interpolate_cpe(h_d_zone_d, h_d_data, cpe_d)\r\n        cpe_value_e = interpolate_cpe(h_d_zone_e, h_d_data, cpe_e)\r\n        cpe_negative = np.array([np.interp(wind['roof_pitch'], angles, negative_pressure_data[:, i]) for i in\r\n                                 range(negative_pressure_data.shape[1])])\r\n\r\n        zones = {\r\n            \"A\": -1.2, \"B\": -0.8, \"C\": -0.5, \"D\": cpe_value_d,\r\n            \"E\": cpe_value_e, \"F\": cpe_negative[0], \"G\": cpe_negative[1],\r\n            \"H\": cpe_negative[2], \"I\": cpe_negative[3], \"J\": cpe_negative[4]\r\n        }\r\n\r\n        for zone, cpe in zones.items():\r\n            results.append({\r\n                \"Zone\": zone,\r\n                \"cpe\": round(cpe, 4),\r\n                \"cpi=0.2\": round(calculate_pressure(peak_pressure, cpe, 0.2), 4),\r\n                \"cpi=-0.3\": round(calculate_pressure(peak_pressure, cpe, -0.3), 4)\r\n            })\r\n\r\n    print(\"Wind Upward Pressures\")\r\n    print(f\"{'Zone':<6}{'cpe':<10}{'Press. cpi=0.2':<15}{'Press. cpi=-0.3'}\")\r\n    print(\"-\" * 56)\r\n    for result in results:\r\n\r\n        cpe_display = f\"+{result['cpe']:.2f}\" if result['cpe'] > 0 else f\"{result['cpe']:.2f}\"\r\n        pressure_cpi_0_2 = f\"+{result['cpi=0.2']:.2f}\" if result[\r\n                                                                     'cpi=0.2'] > 0 else f\"{result['cpi=0.2']:.2f}\"\r\n        pressure_cpi_neg_0_3 = f\"+{result['cpi=-0.3']:.2f}\" if result[\r\n                                                                          'cpi=-0.3'] > 0 else f\"{result['cpi=-0.3']:.2f}\"\r\n\r\n        print(f\"{result['Zone']:<6}{cpe_display:<10}{pressure_cpi_0_2:<15}{pressure_cpi_neg_0_3} kPa\")\r\n\r\n    data[\"wind_zones\"] = results\r\n\r\n    json_str = json.dumps(data, separators=(',', ':'))\r\n\r\n    # Insert line breaks between JSON objects\r\n    formatted_json_str = json_str.replace('},{', '},\\n  {')\r\n    formatted_json_str = formatted_json_str.replace('[{', '[\\n  {')\r\n    formatted_json_str = formatted_json_str.replace('}]', '}\\n]')\r\n    formatted_json_str = formatted_json_str.replace('],', '],\\n')\r\n    formatted_json_str = formatted_json_str.replace(']}', ']\\n}')\r\n\r\n    # Save the formatted JSON string to a file\r\n    with open(\"input_data.json\", 'w') as json_file:\r\n        json_file.write(formatted_json_str)\r\n\r\n    return\r\n\r\nif __name__ == \"__main__\":\r\n    wind_data()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/wind_loads.py b/wind_loads.py
--- a/wind_loads.py	(revision c0e2a8fa0c47e617ee258ccc40d7863a3593d417)
+++ b/wind_loads.py	(date 1749044865687)
@@ -114,5 +114,8 @@
 
     return
 
-if __name__ == "__main__":
-    wind_data()
+# if __name__ == "__main__":
+#     wind_data()
+
+print(calculate_terrain_roughness()))
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c8f59bdd-e5a4-4338-bd02-6f086981f4ed\" name=\"Changes\" comment=\"Added Mono-pitched script and changed wind inputs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/input_data.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/input_data.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/portal_frame_analysis.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/portal_frame_analysis.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user_input.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user_input.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;crunchysmoothie&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GitHubPullRequestState\">{\r\n  &quot;prStates&quot;: [\r\n    {\r\n      &quot;id&quot;: {\r\n        &quot;id&quot;: &quot;PR_kwDOG_cFQ859mFA9&quot;,\r\n        &quot;number&quot;: 8\r\n      },\r\n      &quot;lastSeen&quot;: 1728375584065\r\n    },\r\n    {\r\n      &quot;id&quot;: {\r\n        &quot;id&quot;: &quot;PR_kwDOG_cFQ859jxSI&quot;,\r\n        &quot;number&quot;: 7\r\n      },\r\n      &quot;lastSeen&quot;: 1728375607648\r\n    },\r\n    {\r\n      &quot;id&quot;: {\r\n        &quot;id&quot;: &quot;PR_kwDOG_cFQ859h6Jg&quot;,\r\n        &quot;number&quot;: 5\r\n      },\r\n      &quot;lastSeen&quot;: 1728377351593\r\n    },\r\n    {\r\n      &quot;id&quot;: {\r\n        &quot;id&quot;: &quot;PR_kwDOG_cFQ8596gA8&quot;,\r\n        &quot;number&quot;: 9\r\n      },\r\n      &quot;lastSeen&quot;: 1728378545606\r\n    }\r\n  ]\r\n}</component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"branchProtectionPatterns\">\r\n      <list>\r\n        <option value=\"main\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/crunchysmoothie/Portal_Frame_.git&quot;,\r\n    &quot;accountId&quot;: &quot;05540a47-fae0-4cdc-a919-c459ff95e5db&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2n8qtmO5wVXfY0roEthumi21olN\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.member_database.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.member_strength_checks.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.portal_frame_analysis.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.test.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.user_input.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.wind_loads.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;feature/ruan/Improve__imports&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;terminal&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Python.portal_frame_analysis\">\r\n    <configuration name=\"member_database\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/member_database.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"member_strength_checks\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/member_strength_checks.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"portal_frame_analysis\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/portal_frame_analysis.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"user_input\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/user_input.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"wind_loads\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"pythonProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/wind_loads.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.wind_loads\" />\r\n        <item itemvalue=\"Python.user_input\" />\r\n        <item itemvalue=\"Python.portal_frame_analysis\" />\r\n        <item itemvalue=\"Python.member_strength_checks\" />\r\n        <item itemvalue=\"Python.member_database\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-PY-251.25410.159\" />\r\n        <option value=\"bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c8f59bdd-e5a4-4338-bd02-6f086981f4ed\" name=\"Changes\" comment=\"\" />\r\n      <created>1728365268444</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728365268444</updated>\r\n      <workItem from=\"1748865041767\" duration=\"6674000\" />\r\n      <workItem from=\"1748934678471\" duration=\"8625000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Added todo.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1728398321244</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1728398321244</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Added Mono-pitched script and changed wind inputs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729028770559</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729028770559</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Changed Everything.Now runs with all JSON created from user_input.py\" />\r\n    <MESSAGE value=\"Added todo.txt\" />\r\n    <MESSAGE value=\"Added Mono-pitched script and changed wind inputs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added Mono-pitched script and changed wind inputs\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/pythonProject$portal_frame_analysis.coverage\" NAME=\"portal_frame_analysis Coverage Results\" MODIFIED=\"1748943375337\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/pythonProject$user_input.coverage\" NAME=\"user_input Coverage Results\" MODIFIED=\"1748943371918\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c0e2a8fa0c47e617ee258ccc40d7863a3593d417)
+++ b/.idea/workspace.xml	(date 1749044866119)
@@ -6,9 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="c8f59bdd-e5a4-4338-bd02-6f086981f4ed" name="Changes" comment="Added Mono-pitched script and changed wind inputs">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/input_data.json" beforeDir="false" afterPath="$PROJECT_DIR$/input_data.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/portal_frame_analysis.py" beforeDir="false" afterPath="$PROJECT_DIR$/portal_frame_analysis.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user_input.py" beforeDir="false" afterPath="$PROJECT_DIR$/user_input.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/wind_loads.py" beforeDir="false" afterPath="$PROJECT_DIR$/wind_loads.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -16,6 +14,11 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="feature/ruan/uls-refactor" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
@@ -88,7 +91,7 @@
     &quot;Python.wind_loads.executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;feature/ruan/Improve__imports&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
@@ -100,7 +103,7 @@
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
-  <component name="RunManager" selected="Python.portal_frame_analysis">
+  <component name="RunManager" selected="Python.wind_loads">
     <configuration name="member_database" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="pythonProject" />
       <option name="ENV_FILES" value="" />
@@ -244,6 +247,8 @@
       <updated>1728365268444</updated>
       <workItem from="1748865041767" duration="6674000" />
       <workItem from="1748934678471" duration="8625000" />
+      <workItem from="1748958140606" duration="596000" />
+      <workItem from="1749044170262" duration="691000" />
     </task>
     <task id="LOCAL-00001" summary="Added todo.txt">
       <option name="closed" value="true" />
@@ -285,6 +290,7 @@
     <option name="LAST_COMMIT_MESSAGE" value="Added Mono-pitched script and changed wind inputs" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/pythonProject$wind_loads.coverage" NAME="wind_loads Coverage Results" MODIFIED="1749044847081" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/pythonProject$portal_frame_analysis.coverage" NAME="portal_frame_analysis Coverage Results" MODIFIED="1748943375337" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/pythonProject$user_input.coverage" NAME="user_input Coverage Results" MODIFIED="1748943371918" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
